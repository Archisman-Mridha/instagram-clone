services:
  dragonfly:
    container_name: dragonfly
    image: docker.dragonflydb.io/dragonflydb/dragonfly
    hostname: dragonfly
    environment:
      - REDIS_PASSWORD=XHwjzpbA3d32UGYT
    ports:
      - "6379:6379"
  flagsmith:
    container_name: flagsmith
    image: flagsmith.docker.scarf.sh/flagsmith/flagsmith:latest
    ports:
      - "8000:8000"
    depends_on:
      - postgres
    environment:
      TASK_RUN_METHOD: SYNCHRONOUSLY
      DATABASE_URL: postgres://default:XHwjzpbA3d32UGYT@postgres:5432/instagram_clone?sslmode=disable
      DJANGO_ALLOWED_HOSTS: '*'
      ALLOW_ADMIN_INITIATION_VIA_CLI: "true"
      FLAGSMITH_DOMAIN: localhost:8000
      DJANGO_SECRET_KEY: XHwjzpbA3d32UGYT
      ENABLE_ADMIN_ACCESS_USER_PASS: "true"
  openobserve:
    container_name: openobserve
    image: openobserve/openobserve:v0.14.4
    environment:
      - ZO_ROOT_USER_EMAIL=archismanmridha12345@gmail.com
      - ZO_ROOT_USER_PASSWORD=XHwjzpbA3d32UGYT
    hostname: openobserve
    ports:
      - "5080:5080"
  opentelemetry-collector:
    command:
      - --config=/etc/opentelemetry-collector.config.yaml
    container_name: opentelemetry-collector
    depends_on:
      - openobserve
    hostname: opentelemetry-collector
    image: otel/opentelemetry-collector:0.120.0
    ports:
      - "4317:4317"
    volumes:
      - ../configs/opentelemetry-collector.config.yaml:/etc/opentelemetry-collector.config.yaml
  postgres:
    container_name: postgres
    image: postgres:alpine
    environment:
      - POSTGRES_USER=default
      - POSTGRES_PASSWORD=XHwjzpbA3d32UGYT
      - POSTGRES_DB=instagram_clone
    hostname: postgres
    ports:
      - "5432:5432"
  postgres-migrator:
    command:
      - -path
      - /migrations
      - -database
      - postgres://default:XHwjzpbA3d32UGYT@postgres:5432/instagram_clone?sslmode=disable
      - up
    container_name: postgres-migrator
    depends_on:
      - postgres
    image: migrate/migrate:latest
    restart: on-failure
    volumes:
      - ../../../backend/microservices/users/internal/adapters/repositories/users/schema.sql:/migrations/000001_users_table_init.up.sql:ro
      - ../../../backend/microservices/profiles/internal/adapters/repositories/profiles/schema.sql:/migrations/000002_profiles_table_init.up.sql:ro
  redpanda-node-0:
    command:
      - redpanda
      - start
      - --kafka-addr internal://0.0.0.0:9092,external://0.0.0.0:19092
      - --advertise-kafka-addr internal://redpanda-node-0:9092,external://localhost:19092
      - --pandaproxy-addr internal://0.0.0.0:8082,external://0.0.0.0:18082
      - --advertise-pandaproxy-addr internal://redpanda-node-0:8082,external://localhost:18082
      - --schema-registry-addr internal://0.0.0.0:8081,external://0.0.0.0:18081
      - --rpc-addr redpanda-node-0:33145
      - --advertise-rpc-addr redpanda-node-0:33145
      - --mode dev-container
      - --smp 1
      - --default-log-level=info
    container_name: redpanda-node-0
    hostname: redpanda-node-0
    image: docker.redpanda.com/redpandadata/redpanda:v24.3.6
    ports:
      - "19092:19092"
      - "18082:18082"
      - "18081:18081"
      - "19644:9644"
  redpanda-migrator:
    command:
      - chmod +x /redpanda-migrate.sh && /redpanda-migrate.sh
    container_name: redpanda-migrator
    depends_on:
      - redpanda-node-0
    entrypoint:
      - /bin/bash
      - -c
    image: docker.redpanda.com/redpandadata/redpanda:v24.3.6
    restart: on-failure
    volumes:
      - ../configs/redpanda/migrator.config.yaml:/etc/redpanda/redpanda.yaml:ro
      - ../../../backend/shared/pkg/events/proto/:/etc/redpanda/schemas/protobuf/:ro
      - ../../../scripts/redpanda-migrate.sh:/redpanda-migrate.sh
  redpanda-console:
    container_name: redpanda-console
    image: docker.redpanda.com/redpandadata/console:v2.8.4
    ports:
      - "8080:8080"
    depends_on:
      - redpanda-node-0
    environment:
      - CONFIG_FILEPATH=/etc/redpanda/console.config.yaml
    hostname: redpanda-console
    volumes:
      - ../configs/redpanda/console.config.yaml:/etc/redpanda/console.config.yaml
  zincsearch:
    container_name: zincsearch
    image: public.ecr.aws/zinclabs/zincsearch:latest
    hostname: zincsearch
    environment:
      - ZINC_FIRST_ADMIN_USER=admin
      - ZINC_FIRST_ADMIN_PASSWORD=XHwjzpbA3d32UGYT
    ports:
      - "4080:4080"
name: instagram-clone
networks:
  instagram-clone:
    name: instagram-clone
