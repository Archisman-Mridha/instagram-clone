{
	"name": "example-source-connector",
	"config": {
		"name": "example-source-connector",

		"connector.id": "postgres",
		// The name of the Java class for the connector.
		"connector.class": "io.debezium.connector.postgresql.PostgresConnector",
		"connector.displayName": "PostgreSQL",

		"database.user": "default",
		"database.dbname": "instagram_clone",
		"database.hostname": "postgres",
		"database.password": "pass",

		// Controls whether a delete event is followed by a tombstone event.
		//
		// If true, a delete operation is represented by a delete event and a subsequent tombstone
		// event. Else only a delete event is emitted.
		//
		// After a source record is deleted, emitting a tombstone event (the default behavior) allows
		// Kafka to completely delete all events that pertain to the key of the deleted row in case log
		// compaction is enabled for the topic.
		"tombstones.on.delete": "true",

		// Specifies whether to skip publishing messages when there is no change in included columns.
		// This would essentially filter messages if there is no change in columns included as per
		// column.include.list or column.exclude.list properties.
		// Note: Only works when REPLICA IDENTITY of the table is set to FULL
		"skip.messages.without.change": "true",

		// The name of the PostgreSQL logical decoding slot that was created for streaming changes from
		// a particular plug-in for a particular database/schema. The server uses this slot to stream
		// events to the Debezium connector that you are configuring.
		"slot.name": "example_source_connector",

		"schema.include.list": "public",
		"table.include.list": "public.users",
		"column.include.list": "public.users.id,public.users.name,public.users.username",

		// The name of the PostgreSQL logical decoding plug-in installed on the PostgreSQL server.
		// Supported values are decoderbufs, and pgoutput.
		"plugin.name": "pgoutput",

		// To simplify the format of the event records that the Debezium connectors produce, you can use
		// the Debezium event flattening single message transformation (SMT).
		// "transforms": "unwrap",
		// "transforms.unwrap.type": "io.debezium.transforms.ExtractNewRecordState",
		// "transforms.unwrap.add.fields": "op,",
		// "transforms.unwrap.drop.tombstones": "false",
		// "transforms.unwrap.delete.handling.mode": "rewrite",

		// Topic prefix that provides a namespace for the particular PostgreSQL database server or
		// cluster in which Debezium is capturing changes. The prefix should be unique across all other
		// connectors, since it is used as a topic name prefix for all Kafka topics that receive records
		// from this connector. Only alphanumeric characters, hyphens, dots and underscores must be used
		// in the database server logical name.
		"topic.prefix": "db-events"
	}
}
