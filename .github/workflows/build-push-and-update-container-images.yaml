name: Build, push and update container images
on:
  pull_request:
    types:
      - opened
      - reopened
      - synchronize
permissions:
  contents: write

jobs:

  check-code-changes:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: read
    steps:
      - uses: actions/checkout@v3
      - uses: dorny/paths-filter@v2
        id: filter
        with:
          filters: |
            backend:
              - 'backend/**'
    outputs:
      backend: ${{ steps.filter.outputs.backend }}

  build-and-push-container-images:
    needs: check-code-changes
    if: needs.check-code-changes.outputs.backend == 'true'
    runs-on: ubuntu-latest
    strategy:
      matrix:
        container-image:
          - dockerfile: backend/services/authentication/Dockerfile
            microservice: authentication-microservice
            manifest: kubernetes/base/microservices/authentication/deployment.yaml
    steps:

      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: archismanmridha
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ${{ matrix.container-image.dockerfile }}
          push: true
          tags: archismanmridha/instagram-clone-${{ matrix.container-image.microservice }}:${{ github.sha }}
          # experimental cache exporter for GitHub Actions provided by buildx and BuildKit.
          # It uses the GitHub Cache API to fetch and load the Docker layer cache blobs across
          # builds.
          cache-from: type=gha
          cache-to: type=gha,mode=max

  update-container-image-tags:
    needs: build-and-push-container-images
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        run: |
          git clone https://github.com/Archisman-Mridha/instagram-clone.git ~/instagram-clone
          cd ~/instagram-clone

          git config --global user.name "Archisman-Mridha" && \
            git config --global user.email "archismanmridha12345@gmail.com"

          git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/Archisman-Mridha/instagram-clone

      - name: Update container image tags
        run: |
          cd ~/instagram-clone

          sudo apt update -y && \
            sudo apt install git-crypt -y

          find . -type f -name "deployment.yaml" | while read -r file; do
            sed -i 's/instagram-clone-\(.*\):[[:alnum:]]\+/instagram-clone-\1:${{ github.sha }}/g' $file
          done

          git add kubernetes && \
            git commit -m "Updating container image tags to ${{ github.sha }}" && \
            git push --set-upstream origin main