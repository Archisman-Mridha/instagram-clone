extend schema
  @link(url: "https://grafbase.com/extensions/grpc/0.1.0", import: ["@protoServices", "@protoEnums", "@protoMessages", "@grpcMethod"])
  @protoServices(
    definitions: [
      {
        name: "microservices.users.UsersService"
        methods: [
          {
            name: "Ping"
            inputType: ".google.protobuf.Empty"
            outputType: ".google.protobuf.Empty"
          }
          {
            name: "Signup"
            inputType: ".microservices.users.SignupRequest"
            outputType: ".microservices.users.SigninResponse"
          }
          {
            name: "Signin"
            inputType: ".microservices.users.SigninRequest"
            outputType: ".microservices.users.SigninResponse"
          }
        ]
      }
    ]
  )
  @protoMessages(
    definitions: [
      {
        name: ".google.protobuf.Empty"
        fields: [
        ]
      }
      {
        name: ".microservices.users.SignupRequest"
        fields: [
          {
            name: "name"
            number: 1
            repeated: false
            type: "string"
          }
          {
            name: "email"
            number: 2
            repeated: false
            type: "string"
          }
          {
            name: "username"
            number: 3
            repeated: false
            type: "string"
          }
          {
            name: "password"
            number: 4
            repeated: false
            type: "string"
          }
        ]
      }
      {
        name: ".microservices.users.SigninRequest"
        fields: [
          {
            name: "email"
            number: 1
            repeated: false
            type: "string"
          }
          {
            name: "username"
            number: 2
            repeated: false
            type: "string"
          }
          {
            name: "password"
            number: 3
            repeated: false
            type: "string"
          }
        ]
      }
      {
        name: ".microservices.users.SigninResponse"
        fields: [
          {
            name: "user_id"
            number: 1
            repeated: false
            type: "int32"
          }
          {
            name: "jwt"
            number: 2
            repeated: false
            type: "string"
          }
        ]
      }
    ]
  )

type Mutation {
  microservices_users_UsersService_Ping(input: EmptyObject): EmptyObject @grpcMethod(service: "microservices.users.UsersService", method: "Ping")
  microservices_users_UsersService_Signup(input: microservices_users_SignupRequestInput): microservices_users_SigninResponse @grpcMethod(service: "microservices.users.UsersService", method: "Signup")
  microservices_users_UsersService_Signin(input: microservices_users_SigninRequestInput): microservices_users_SigninResponse @grpcMethod(service: "microservices.users.UsersService", method: "Signin")
}

"64 bit signed integer" scalar I64
"64 bit unsigned integer" scalar U64

"An empty object " scalar EmptyObject

"""
A generic empty message that you can re-use to avoid defining duplicated
 empty messages in your APIs. A typical example is to use it as the request
 or the response type of an API method. For instance:

     service Foo {
       rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);
     }
"""
input google_protobuf_EmptyInput {
}

input microservices_users_SignupRequestInput {
  name: String
  email: String
  username: String
  password: String
}

input microservices_users_SigninRequestInput {
  email: String
  username: String
  password: String
}

"An empty object " scalar EmptyObject

"""
A generic empty message that you can re-use to avoid defining duplicated
 empty messages in your APIs. A typical example is to use it as the request
 or the response type of an API method. For instance:

     service Foo {
       rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);
     }
"""
type google_protobuf_Empty {
}

type microservices_users_SigninResponse {
  user_id: Int
  jwt: String
}
