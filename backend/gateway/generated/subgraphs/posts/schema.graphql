extend schema
  @link(url: "https://grafbase.com/extensions/grpc/0.1.0", import: ["@protoServices", "@protoEnums", "@protoMessages", "@grpcMethod"])
  @protoServices(
    definitions: [
      {
        name: "microservices.posts.PostsService"
        methods: [
          {
            name: "Ping"
            inputType: ".google.protobuf.Empty"
            outputType: ".google.protobuf.Empty"
          }
          {
            name: "CreatePost"
            inputType: ".microservices.posts.CreatePostRequest"
            outputType: ".microservices.posts.CreatePostResponse"
          }
          {
            name: "GetPostsOfUser"
            inputType: ".microservices.posts.GetPostsOfUserRequest"
            outputType: ".microservices.posts.GetPostsResponse"
          }
          {
            name: "GetPosts"
            inputType: ".microservices.posts.GetPostsRequest"
            outputType: ".microservices.posts.GetPostsResponse"
          }
        ]
      }
    ]
  )
  @protoMessages(
    definitions: [
      {
        name: ".google.protobuf.Empty"
        fields: [
        ]
      }
      {
        name: ".microservices.posts.Post"
        fields: [
          {
            name: "id"
            number: 1
            repeated: false
            type: "int32"
          }
          {
            name: "owner_id"
            number: 2
            repeated: false
            type: "int32"
          }
          {
            name: "description"
            number: 3
            repeated: false
            type: "string"
          }
          {
            name: "created_at"
            number: 4
            repeated: false
            type: "string"
          }
        ]
      }
      {
        name: ".microservices.posts.PaginationArgs"
        fields: [
          {
            name: "offset"
            number: 1
            repeated: false
            type: "uint64"
          }
          {
            name: "page_size"
            number: 2
            repeated: false
            type: "uint64"
          }
        ]
      }
      {
        name: ".microservices.posts.CreatePostRequest"
        fields: [
          {
            name: "owner_id"
            number: 1
            repeated: false
            type: "int32"
          }
          {
            name: "description"
            number: 2
            repeated: false
            type: "string"
          }
        ]
      }
      {
        name: ".microservices.posts.CreatePostResponse"
        fields: [
          {
            name: "post_id"
            number: 1
            repeated: false
            type: "int32"
          }
        ]
      }
      {
        name: ".microservices.posts.GetPostsOfUserRequest"
        fields: [
          {
            name: "owner_id"
            number: 1
            repeated: false
            type: "int32"
          }
          {
            name: "pagination_args"
            number: 2
            repeated: false
            type: ".microservices.posts.PaginationArgs"
          }
        ]
      }
      {
        name: ".microservices.posts.GetPostsRequest"
        fields: [
          {
            name: "post_ids"
            number: 1
            repeated: true
            type: "int32"
          }
        ]
      }
      {
        name: ".microservices.posts.GetPostsResponse"
        fields: [
          {
            name: "posts"
            number: 1
            repeated: true
            type: ".microservices.posts.Post"
          }
        ]
      }
    ]
  )

type Mutation {
  microservices_posts_PostsService_Ping(input: EmptyObject): EmptyObject @grpcMethod(service: "microservices.posts.PostsService", method: "Ping")
  microservices_posts_PostsService_CreatePost(input: microservices_posts_CreatePostRequestInput): microservices_posts_CreatePostResponse @grpcMethod(service: "microservices.posts.PostsService", method: "CreatePost")
  microservices_posts_PostsService_GetPostsOfUser(input: microservices_posts_GetPostsOfUserRequestInput): microservices_posts_GetPostsResponse @grpcMethod(service: "microservices.posts.PostsService", method: "GetPostsOfUser")
  microservices_posts_PostsService_GetPosts(input: microservices_posts_GetPostsRequestInput): microservices_posts_GetPostsResponse @grpcMethod(service: "microservices.posts.PostsService", method: "GetPosts")
}

"64 bit signed integer" scalar I64
"64 bit unsigned integer" scalar U64

"An empty object " scalar EmptyObject

"""
A generic empty message that you can re-use to avoid defining duplicated
 empty messages in your APIs. A typical example is to use it as the request
 or the response type of an API method. For instance:

     service Foo {
       rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);
     }
"""
input google_protobuf_EmptyInput {
}

input microservices_posts_PaginationArgsInput {
  offset: U64
  page_size: U64
}

input microservices_posts_CreatePostRequestInput {
  owner_id: Int
  description: String
}

input microservices_posts_GetPostsOfUserRequestInput {
  owner_id: Int
  pagination_args: microservices_posts_PaginationArgsInput
}

input microservices_posts_GetPostsRequestInput {
  post_ids: [Int!]
}

"An empty object " scalar EmptyObject

"""
A generic empty message that you can re-use to avoid defining duplicated
 empty messages in your APIs. A typical example is to use it as the request
 or the response type of an API method. For instance:

     service Foo {
       rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);
     }
"""
type google_protobuf_Empty {
}

type microservices_posts_Post {
  id: Int
  owner_id: Int
  description: String
  created_at: String
}

type microservices_posts_CreatePostResponse {
  post_id: Int
}

type microservices_posts_GetPostsResponse {
  posts: [microservices_posts_Post!]
}
