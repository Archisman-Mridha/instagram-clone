# Where are all the schema files located? globs are supported eg  src/**/*.graphqls
schema:
  - schema.graphql

# Where should the generated server code go?
exec:
  filename: generated/graphql/server.go
  package: graphql_generated

# Where should any generated models go?
model:
  filename: generated/graphql/models.go
  package: graphql_generated

# Where should the resolver implementations go?
resolver:
  layout: follow-schema
  dir: generated/graphql
  package: graphql_generated
  omit_template_comment: true

# Optional: turn on use `gqlgen:"fieldName"` tags in your models
# struct_tag: json

# Optional: turn on to use []Thing instead of []*Thing
# omit_slice_element_pointers: false

# Optional: set to speed up generation time by not performing a final validation pass.
# skip_validation: true

# This section declares type mapping between the GraphQL and go type systems
#
# The first line in each type will be used as defaults for resolver arguments and
# modelgen, the others will be allowed when binding to fields. Configure them to
# your liking
models:
  ID:
    model:
      - github.com/99designs/gqlgen/graphql.ID
      - github.com/99designs/gqlgen/graphql.Int64
      - github.com/99designs/gqlgen/graphql.IntID
  Int:
    model:
      - github.com/99designs/gqlgen/graphql.Int
      - github.com/99designs/gqlgen/graphql.Int64
      - github.com/99designs/gqlgen/graphql.Int32
