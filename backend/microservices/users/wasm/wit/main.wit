// The WIT (Wasm Interface Type) language is used to define Component Model interfaces and worlds.
// It defines only contracts between components.

// A package is a set of interfaces and worlds, potentially defined across multiple files.
// The package declaration must include a namespace and name, separated by a colon, and may
// optionally include a semver-compliant version.
package instagram-clone:users-microservice@1.0.0;

// A world describes a set of imports and exports.
world default {
  export validators;
}

// An interface is a named set of types and functions.
interface validators {
  validate-name: func(name: string) -> result<tuple<>, string>;
  validate-email: func(email: string) -> result<tuple<>, string>;
  validate-username: func(username: string) -> result<tuple<>, string>;
  validate-password: func(password: string) -> result<tuple<>, string>;
}
