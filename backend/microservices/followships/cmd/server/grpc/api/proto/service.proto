syntax = "proto3";

package microservices.followships;

import "google/protobuf/empty.proto";
import "microservices/followships/cmd/server/grpc/api/proto/types.proto";

option go_package = "microservices/followships/cmd/server/grpc/api/proto/generated";

service FollowshipsService {
  rpc Ping(google.protobuf.Empty) returns (google.protobuf.Empty);

  rpc CreateFollowship(FollowshipOperationRequest) returns (google.protobuf.Empty);
  rpc DeleteFollowship(FollowshipOperationRequest) returns (google.protobuf.Empty);
  rpc DoesFollowshipExist(FollowshipOperationRequest) returns (DoesFollowshipExistResponse);

  rpc GetFollowers(GetFollowersRequest) returns (GetFollowersResponse);
  rpc GetFollowings(GetFollowingsRequest) returns (GetFollowingsResponse);
  rpc GetFollowerAndFollowingCounts(GetFollowerAndFollowingCountsRequest) returns (GetFollowerAndFollowingCountsResponse);
}

message FollowshipOperationRequest {
  int32 follower_id = 1;
  int32 followee_id = 2;
}

message DoesFollowshipExistResponse {
  bool followship_exists = 1;
}

message GetFollowersRequest {
  int32 user_id = 1;

  PaginationArgs pagination_args = 2;
}

message GetFollowersResponse {
  repeated int32 follower_ids = 1;
}

message GetFollowingsRequest {
  int32 user_id = 1;

  PaginationArgs pagination_args = 2;
}

message GetFollowingsResponse {
  repeated int32 followee_ids = 1;
}

message GetFollowerAndFollowingCountsRequest {
  int32 user_id = 1;
}

message GetFollowerAndFollowingCountsResponse {
  int64 follower_count  = 1;
  int64 following_count = 2;
}
