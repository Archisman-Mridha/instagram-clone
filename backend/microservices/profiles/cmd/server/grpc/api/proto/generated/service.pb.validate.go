// Code generated by protoc-gen-validate. DO NOT EDIT.
// source: profiles/cmd/server/grpc/api/proto/service.proto

package generated

import (
	"bytes"
	"errors"
	"fmt"
	"net"
	"net/mail"
	"net/url"
	"regexp"
	"sort"
	"strings"
	"time"
	"unicode/utf8"

	"google.golang.org/protobuf/types/known/anypb"
)

// ensure the imports are used
var (
	_ = bytes.MinRead
	_ = errors.New("")
	_ = fmt.Print
	_ = utf8.UTFMax
	_ = (*regexp.Regexp)(nil)
	_ = (*strings.Reader)(nil)
	_ = net.IPv4len
	_ = time.Duration(0)
	_ = (*url.URL)(nil)
	_ = (*mail.Address)(nil)
	_ = anypb.Any{}
	_ = sort.Sort
)

// Validate checks the field values on SearchProfilesRequest with the rules
// defined in the proto definition for this message. If any rules are
// violated, the first error encountered is returned, or nil if there are no violations.
func (m *SearchProfilesRequest) Validate() error {
	return m.validate(false)
}

// ValidateAll checks the field values on SearchProfilesRequest with the rules
// defined in the proto definition for this message. If any rules are
// violated, the result is a list of violation errors wrapped in
// SearchProfilesRequestMultiError, or nil if none found.
func (m *SearchProfilesRequest) ValidateAll() error {
	return m.validate(true)
}

func (m *SearchProfilesRequest) validate(all bool) error {
	if m == nil {
		return nil
	}

	var errors []error

	// no validation rules for Query

	if len(errors) > 0 {
		return SearchProfilesRequestMultiError(errors)
	}

	return nil
}

// SearchProfilesRequestMultiError is an error wrapping multiple validation
// errors returned by SearchProfilesRequest.ValidateAll() if the designated
// constraints aren't met.
type SearchProfilesRequestMultiError []error

// Error returns a concatenation of all the error messages it wraps.
func (m SearchProfilesRequestMultiError) Error() string {
	msgs := make([]string, 0, len(m))
	for _, err := range m {
		msgs = append(msgs, err.Error())
	}
	return strings.Join(msgs, "; ")
}

// AllErrors returns a list of validation violation errors.
func (m SearchProfilesRequestMultiError) AllErrors() []error { return m }

// SearchProfilesRequestValidationError is the validation error returned by
// SearchProfilesRequest.Validate if the designated constraints aren't met.
type SearchProfilesRequestValidationError struct {
	field  string
	reason string
	cause  error
	key    bool
}

// Field function returns field value.
func (e SearchProfilesRequestValidationError) Field() string { return e.field }

// Reason function returns reason value.
func (e SearchProfilesRequestValidationError) Reason() string { return e.reason }

// Cause function returns cause value.
func (e SearchProfilesRequestValidationError) Cause() error { return e.cause }

// Key function returns key value.
func (e SearchProfilesRequestValidationError) Key() bool { return e.key }

// ErrorName returns error name.
func (e SearchProfilesRequestValidationError) ErrorName() string {
	return "SearchProfilesRequestValidationError"
}

// Error satisfies the builtin error interface
func (e SearchProfilesRequestValidationError) Error() string {
	cause := ""
	if e.cause != nil {
		cause = fmt.Sprintf(" | caused by: %v", e.cause)
	}

	key := ""
	if e.key {
		key = "key for "
	}

	return fmt.Sprintf(
		"invalid %sSearchProfilesRequest.%s: %s%s",
		key,
		e.field,
		e.reason,
		cause)
}

var _ error = SearchProfilesRequestValidationError{}

var _ interface {
	Field() string
	Reason() string
	Key() bool
	Cause() error
	ErrorName() string
} = SearchProfilesRequestValidationError{}

// Validate checks the field values on SearchProfilesResponse with the rules
// defined in the proto definition for this message. If any rules are
// violated, the first error encountered is returned, or nil if there are no violations.
func (m *SearchProfilesResponse) Validate() error {
	return m.validate(false)
}

// ValidateAll checks the field values on SearchProfilesResponse with the rules
// defined in the proto definition for this message. If any rules are
// violated, the result is a list of violation errors wrapped in
// SearchProfilesResponseMultiError, or nil if none found.
func (m *SearchProfilesResponse) ValidateAll() error {
	return m.validate(true)
}

func (m *SearchProfilesResponse) validate(all bool) error {
	if m == nil {
		return nil
	}

	var errors []error

	for idx, item := range m.GetProfilePreviews() {
		_, _ = idx, item

		if all {
			switch v := interface{}(item).(type) {
			case interface{ ValidateAll() error }:
				if err := v.ValidateAll(); err != nil {
					errors = append(errors, SearchProfilesResponseValidationError{
						field:  fmt.Sprintf("ProfilePreviews[%v]", idx),
						reason: "embedded message failed validation",
						cause:  err,
					})
				}
			case interface{ Validate() error }:
				if err := v.Validate(); err != nil {
					errors = append(errors, SearchProfilesResponseValidationError{
						field:  fmt.Sprintf("ProfilePreviews[%v]", idx),
						reason: "embedded message failed validation",
						cause:  err,
					})
				}
			}
		} else if v, ok := interface{}(item).(interface{ Validate() error }); ok {
			if err := v.Validate(); err != nil {
				return SearchProfilesResponseValidationError{
					field:  fmt.Sprintf("ProfilePreviews[%v]", idx),
					reason: "embedded message failed validation",
					cause:  err,
				}
			}
		}

	}

	if len(errors) > 0 {
		return SearchProfilesResponseMultiError(errors)
	}

	return nil
}

// SearchProfilesResponseMultiError is an error wrapping multiple validation
// errors returned by SearchProfilesResponse.ValidateAll() if the designated
// constraints aren't met.
type SearchProfilesResponseMultiError []error

// Error returns a concatenation of all the error messages it wraps.
func (m SearchProfilesResponseMultiError) Error() string {
	msgs := make([]string, 0, len(m))
	for _, err := range m {
		msgs = append(msgs, err.Error())
	}
	return strings.Join(msgs, "; ")
}

// AllErrors returns a list of validation violation errors.
func (m SearchProfilesResponseMultiError) AllErrors() []error { return m }

// SearchProfilesResponseValidationError is the validation error returned by
// SearchProfilesResponse.Validate if the designated constraints aren't met.
type SearchProfilesResponseValidationError struct {
	field  string
	reason string
	cause  error
	key    bool
}

// Field function returns field value.
func (e SearchProfilesResponseValidationError) Field() string { return e.field }

// Reason function returns reason value.
func (e SearchProfilesResponseValidationError) Reason() string { return e.reason }

// Cause function returns cause value.
func (e SearchProfilesResponseValidationError) Cause() error { return e.cause }

// Key function returns key value.
func (e SearchProfilesResponseValidationError) Key() bool { return e.key }

// ErrorName returns error name.
func (e SearchProfilesResponseValidationError) ErrorName() string {
	return "SearchProfilesResponseValidationError"
}

// Error satisfies the builtin error interface
func (e SearchProfilesResponseValidationError) Error() string {
	cause := ""
	if e.cause != nil {
		cause = fmt.Sprintf(" | caused by: %v", e.cause)
	}

	key := ""
	if e.key {
		key = "key for "
	}

	return fmt.Sprintf(
		"invalid %sSearchProfilesResponse.%s: %s%s",
		key,
		e.field,
		e.reason,
		cause)
}

var _ error = SearchProfilesResponseValidationError{}

var _ interface {
	Field() string
	Reason() string
	Key() bool
	Cause() error
	ErrorName() string
} = SearchProfilesResponseValidationError{}

// Validate checks the field values on GetProfilePreviewsRequest with the rules
// defined in the proto definition for this message. If any rules are
// violated, the first error encountered is returned, or nil if there are no violations.
func (m *GetProfilePreviewsRequest) Validate() error {
	return m.validate(false)
}

// ValidateAll checks the field values on GetProfilePreviewsRequest with the
// rules defined in the proto definition for this message. If any rules are
// violated, the result is a list of violation errors wrapped in
// GetProfilePreviewsRequestMultiError, or nil if none found.
func (m *GetProfilePreviewsRequest) ValidateAll() error {
	return m.validate(true)
}

func (m *GetProfilePreviewsRequest) validate(all bool) error {
	if m == nil {
		return nil
	}

	var errors []error

	if len(errors) > 0 {
		return GetProfilePreviewsRequestMultiError(errors)
	}

	return nil
}

// GetProfilePreviewsRequestMultiError is an error wrapping multiple validation
// errors returned by GetProfilePreviewsRequest.ValidateAll() if the
// designated constraints aren't met.
type GetProfilePreviewsRequestMultiError []error

// Error returns a concatenation of all the error messages it wraps.
func (m GetProfilePreviewsRequestMultiError) Error() string {
	msgs := make([]string, 0, len(m))
	for _, err := range m {
		msgs = append(msgs, err.Error())
	}
	return strings.Join(msgs, "; ")
}

// AllErrors returns a list of validation violation errors.
func (m GetProfilePreviewsRequestMultiError) AllErrors() []error { return m }

// GetProfilePreviewsRequestValidationError is the validation error returned by
// GetProfilePreviewsRequest.Validate if the designated constraints aren't met.
type GetProfilePreviewsRequestValidationError struct {
	field  string
	reason string
	cause  error
	key    bool
}

// Field function returns field value.
func (e GetProfilePreviewsRequestValidationError) Field() string { return e.field }

// Reason function returns reason value.
func (e GetProfilePreviewsRequestValidationError) Reason() string { return e.reason }

// Cause function returns cause value.
func (e GetProfilePreviewsRequestValidationError) Cause() error { return e.cause }

// Key function returns key value.
func (e GetProfilePreviewsRequestValidationError) Key() bool { return e.key }

// ErrorName returns error name.
func (e GetProfilePreviewsRequestValidationError) ErrorName() string {
	return "GetProfilePreviewsRequestValidationError"
}

// Error satisfies the builtin error interface
func (e GetProfilePreviewsRequestValidationError) Error() string {
	cause := ""
	if e.cause != nil {
		cause = fmt.Sprintf(" | caused by: %v", e.cause)
	}

	key := ""
	if e.key {
		key = "key for "
	}

	return fmt.Sprintf(
		"invalid %sGetProfilePreviewsRequest.%s: %s%s",
		key,
		e.field,
		e.reason,
		cause)
}

var _ error = GetProfilePreviewsRequestValidationError{}

var _ interface {
	Field() string
	Reason() string
	Key() bool
	Cause() error
	ErrorName() string
} = GetProfilePreviewsRequestValidationError{}

// Validate checks the field values on GetProfilePreviewsResponse with the
// rules defined in the proto definition for this message. If any rules are
// violated, the first error encountered is returned, or nil if there are no violations.
func (m *GetProfilePreviewsResponse) Validate() error {
	return m.validate(false)
}

// ValidateAll checks the field values on GetProfilePreviewsResponse with the
// rules defined in the proto definition for this message. If any rules are
// violated, the result is a list of violation errors wrapped in
// GetProfilePreviewsResponseMultiError, or nil if none found.
func (m *GetProfilePreviewsResponse) ValidateAll() error {
	return m.validate(true)
}

func (m *GetProfilePreviewsResponse) validate(all bool) error {
	if m == nil {
		return nil
	}

	var errors []error

	for idx, item := range m.GetProfilePreviews() {
		_, _ = idx, item

		if all {
			switch v := interface{}(item).(type) {
			case interface{ ValidateAll() error }:
				if err := v.ValidateAll(); err != nil {
					errors = append(errors, GetProfilePreviewsResponseValidationError{
						field:  fmt.Sprintf("ProfilePreviews[%v]", idx),
						reason: "embedded message failed validation",
						cause:  err,
					})
				}
			case interface{ Validate() error }:
				if err := v.Validate(); err != nil {
					errors = append(errors, GetProfilePreviewsResponseValidationError{
						field:  fmt.Sprintf("ProfilePreviews[%v]", idx),
						reason: "embedded message failed validation",
						cause:  err,
					})
				}
			}
		} else if v, ok := interface{}(item).(interface{ Validate() error }); ok {
			if err := v.Validate(); err != nil {
				return GetProfilePreviewsResponseValidationError{
					field:  fmt.Sprintf("ProfilePreviews[%v]", idx),
					reason: "embedded message failed validation",
					cause:  err,
				}
			}
		}

	}

	if len(errors) > 0 {
		return GetProfilePreviewsResponseMultiError(errors)
	}

	return nil
}

// GetProfilePreviewsResponseMultiError is an error wrapping multiple
// validation errors returned by GetProfilePreviewsResponse.ValidateAll() if
// the designated constraints aren't met.
type GetProfilePreviewsResponseMultiError []error

// Error returns a concatenation of all the error messages it wraps.
func (m GetProfilePreviewsResponseMultiError) Error() string {
	msgs := make([]string, 0, len(m))
	for _, err := range m {
		msgs = append(msgs, err.Error())
	}
	return strings.Join(msgs, "; ")
}

// AllErrors returns a list of validation violation errors.
func (m GetProfilePreviewsResponseMultiError) AllErrors() []error { return m }

// GetProfilePreviewsResponseValidationError is the validation error returned
// by GetProfilePreviewsResponse.Validate if the designated constraints aren't met.
type GetProfilePreviewsResponseValidationError struct {
	field  string
	reason string
	cause  error
	key    bool
}

// Field function returns field value.
func (e GetProfilePreviewsResponseValidationError) Field() string { return e.field }

// Reason function returns reason value.
func (e GetProfilePreviewsResponseValidationError) Reason() string { return e.reason }

// Cause function returns cause value.
func (e GetProfilePreviewsResponseValidationError) Cause() error { return e.cause }

// Key function returns key value.
func (e GetProfilePreviewsResponseValidationError) Key() bool { return e.key }

// ErrorName returns error name.
func (e GetProfilePreviewsResponseValidationError) ErrorName() string {
	return "GetProfilePreviewsResponseValidationError"
}

// Error satisfies the builtin error interface
func (e GetProfilePreviewsResponseValidationError) Error() string {
	cause := ""
	if e.cause != nil {
		cause = fmt.Sprintf(" | caused by: %v", e.cause)
	}

	key := ""
	if e.key {
		key = "key for "
	}

	return fmt.Sprintf(
		"invalid %sGetProfilePreviewsResponse.%s: %s%s",
		key,
		e.field,
		e.reason,
		cause)
}

var _ error = GetProfilePreviewsResponseValidationError{}

var _ interface {
	Field() string
	Reason() string
	Key() bool
	Cause() error
	ErrorName() string
} = GetProfilePreviewsResponseValidationError{}
