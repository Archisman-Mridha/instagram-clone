apiVersion: debezium.io/v1alpha1
kind: DebeziumServer 
metadata:
  name: posts-table
  namespace: debezium

spec:
  image: quay.io/debezium/server:2.4.0.Final

  quarkus: 
    config:
      log.console.json: false
      kubernetes-config.enabled: true
      kubernetes-config.secrets: postgres-credentials

  sink:
    type: kafka
    config:
      producer.bootstrap.servers: main-kafka-bootstrap.strimzi:9092
      producer.key.serializer: org.apache.kafka.common.serialization.StringSerializer
      producer.value.serializer: org.apache.kafka.common.serialization.StringSerializer

  source:
    class: io.debezium.connector.postgresql.PostgresConnector
    config:
      offset.storage.file.filename: /debezium/data/offsets.dat

      # connector.id: posts-table-source-connector
      # connector.displayName: posts-table-source-connector

      database.server.name: posts
      database.hostname: main-rw.cloudnative-pg
      database.port: 5432
      database.dbname: instagram_clone
      database.user: ${POSTGRES_USER}
      database.password: ${POSTGRES_PASSWORD}
      database.history: io.debezium.relational.history.FileDatabaseHistory

      tombstones.on.delete: "false"

      skip.messages.without.change: "true"

      slot.name: posts_table_source_connector

      schema.include.list: public
      table.include.list: public.posts
      column.include.list: public.posts.id,public.posts.owner_id

      plugin.name: pgoutput

      publication.autocreate.mode: all_tables

      # the Debezium event flattening single message transformation (SMT).
      # transforms: unwrap
      # transforms.unwrap.type: io.debezium.transforms.ExtractNewRecordState
      # transforms.unwrap.add.fields: op,
      # transforms.unwrap.drop.tombstones: false
      # transforms.unwrap.delete.handling.mode: rewrite

      topic.prefix: db-events